# up.yaml
- name: Install Jenkins on k8s with Ansible
  hosts: localhost
  gather_facts: false

  vars:
    kubeconfig: "{{ lookup('env','KUBECONFIG') | default('~/.kube/config', true) }}"
    ns: jenkins

    # Service exposure
    jenkins_nodeport: 30000

    # Ingress toggles (set create_ingress: true if using Traefik + Cloudflare)
    create_ingress: false
    jenkins_hostname: "jenkins.example.com"  # set your domain if using ingress

  tasks:
    - name: Ensure namespace exists
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ ns }}"

    - name: Deploy Jenkins (LTS)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: jenkins
            namespace: "{{ ns }}"
          spec:
            replicas: 1
            selector:
              matchLabels: { app: jenkins }
            template:
              metadata:
                labels: { app: jenkins }
              spec:
                containers:
                  - name: jenkins
                    image: jenkins/jenkins:lts
                    ports:
                      - name: http
                        containerPort: 8080
                      - name: jnlp
                        containerPort: 50000
                    # Ephemeral storage is OK for this lab; use PVC if you want persistence
                    volumeMounts:
                      - name: jenkins-home
                        mountPath: /var/jenkins_home
                volumes:
                  - name: jenkins-home
                    emptyDir: {}

    - name: Expose Jenkins UI (NodePort)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: jenkins
            namespace: "{{ ns }}"
          spec:
            type: NodePort
            selector: { app: jenkins }
            ports:
              - name: http
                port: 8080
                targetPort: 8080
                nodePort: "{{ jenkins_nodeport }}"

    - name: Expose Jenkins JNLP (ClusterIP)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: jenkins-jnlp
            namespace: "{{ ns }}"
          spec:
            type: ClusterIP
            selector: { app: jenkins }
            ports:
              - name: jnlp
                port: 50000
                targetPort: 50000

    - name: (Optional) Ingress via Traefik
      when: create_ingress | bool
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: jenkins
            namespace: "{{ ns }}"
            annotations:
              kubernetes.io/ingress.class: "traefik"
              traefik.ingress.kubernetes.io/router.entrypoints: "web"
          spec:
            rules:
              - host: "{{ jenkins_hostname }}"
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: jenkins
                          port:
                            number: 8080

    - name: Wait for Jenkins to be Available
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: jenkins
            namespace: "{{ ns }}"
        wait: true
        wait_condition:
          type: Available
          status: "True"
